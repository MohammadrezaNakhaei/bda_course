---
title: "Assignment 2 - Bayesian data analysis"
author: anonymous # <-- hand in anonymously
format: 
  html:
    toc: true
    code-tools: true
    code-line-numbers: true
    standalone: true
    self-contained: true
    embed-resources: true  
    number-sections: true
    mainfont: Georgia, serif
    fontsize: 1.2em
  pdf:  
    documentclass: article
    number-sections: true
    include-in-header: 
      text: |
        % You can add TeX macros here for PDF, 
        % see https://quarto.org/docs/output-formats/pdf-basics.html#latex-includes
        \newcommand{\BetaDist}{\mathrm{Beta}}
reference-location: margin
citation-location: margin 
comments:
  hypothesis: true
editor: source
---


::: {.hidden}
$$
% You can add TeX macros here for HTML, see https://quarto.org/docs/authoring/markdown-basics.html#equations
\renewcommand{\BetaDist}{\mathrm{Beta}}
$$
:::

# General information

:::: {.content-hidden when-format="pdf"}
::: {.callout-warning}
 
## Setup 

*This block will only be visible in your HTML output, but will be hidden when rendering to PDF for the submission.*



This is the template for [assignment 2](assignment2.html). You can download the [qmd-file](https://raw.githubusercontent.com/avehtari/BDA_course_Aalto/gh-pages/assignments/template2.qmd) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.

**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.** 

The following will set-up `markmyassignment` to check your functions at the end of the notebook:
 
```{r} 
library(markmyassignment) 
assignment_path = paste("https://github.com/avehtari/BDA_course_Aalto/",
"blob/master/assignments/tests/assignment2.yml", sep="")
set_assignment(assignment_path)    
```       

The following installs the `aaltobda` package:
```{r}
#| cache: true
# Caching should be fine here
install.packages("remotes")
remotes::install_github("avehtari/BDA_course_Aalto", subdir = "rpackage", upgrade="never")
```

:::
::::


# Inference for binomial proportion

**Loading the library and the data.**
```{r}
library(aaltobda)
data("algae")
# The data are now stored in the variable `algae`.
```

The below data is **only for the tests**, you need to change to the
full data `algae` when reporting your results.
```{r}
algae_test <- c(0, 1, 1, 0, 0, 0)
```


## (a)


**Write the likelihood, the prior and the posterior here!**
```{r}
# Not the actual values below,
# you will have to compute those from the data!
alpha = 10
beta = 20
```

You can do [string interpolation](https://en.wikipedia.org/wiki/String_interpolation) using [R inline code execution in quarto](https://quarto.org/docs/computations/execution-options.html#knitr) as such:

$\alpha$ is **`r alpha`** and $\beta$ is **`r beta`**.

This template defines a `\BetaDist` TeX command which renders `\BetaDist(1,2)` as $\BetaDist(1,2)$.


## (b)


**Keep the below name and format for the functions to work with `markmyassignment`:**
```{r} 
# Useful R function: qbeta()

beta_point_est <- function(prior_alpha, prior_beta, data) {
    # Do computation here, and return as below.
    # This is the correct return value for the test data provided above.
    0.2222222
}
beta_interval <- function(prior_alpha, prior_beta, data, prob = 0.95) {
    # Do computation here, and return as below.
    # This is the correct return value for the test data provided above.
    c(0.0846451, 0.3956414)
}
```


## (c)


**Keep the below name and format for the function to work with `markmyassignment`:**
```{r}
# Useful function: pbeta()

beta_low <- function(prior_alpha, prior_beta, data, pi_0) {
    # Do computation here, and return as below.
    # This is the correct return value for the test data provided above.
    0.4511238
}
```


## (d)


**Write your answer here!**


## (e)


**Plot the PDFs here. Explain shortly what you do.**
```{r}
# Useful function: dbeta()
```



:::: {.content-hidden when-format="pdf"}
::: {.callout-warning}

## markmyassignment

*This block will only be visible in your HTML output, but will be hidden when rendering to PDF for the submission.*


The following will check the functions for which `markmyassignment` has been set up:
 
```{r}  
mark_my_assignment()    
```      

:::
::::

